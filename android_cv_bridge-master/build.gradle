/*
 * Copyright (c) 2015, Tal Regev
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Android Sensors Driver nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

task wrapper(type: Wrapper) {
    gradleVersion = "2.14.1"
    distributionUrl = "https://services.gradle.org/distributions/gradle-" + gradleVersion + "-all.zip"
}

buildscript {
    apply from: "https://github.com/rosjava/android_core/raw/kinetic/buildscript.gradle"
}

apply plugin: "catkin"

allprojects {
    group "org"
    version = project.catkin.pkg.version
}

String version = project.catkin.pkg.version
int versionNum = Integer.valueOf(version.replace(".", ""))
String[] javaProjects = "image cv_bridge_javacv".split()

subprojects {

    /*
     * The ros plugin configures a few things:
     *
     *  - local deployment repository : where it dumps the jars and packaged artifacts)
     *  - local maven repositories    : where it finds your locally installed/built artifacts)
     *  - external maven repositories : where it goes looking if it can't find dependencies locally
     *
     * To modify, or add repos to the default external maven repositories list, pull request against this code:
     *
     *   https://github.com/rosjava/rosjava_bootstrap/blob/indigo/gradle_plugins/src/main/groovy/org/ros/gradle_plugins/RosPlugin.groovy#L31
     */
    def isJava = false
    javaProjects.each { String entry ->
        if (name == entry ) {
            isJava = true
        }
    }
    if (isJava) {
        apply plugin: "ros-java"
    }
    else{
        apply plugin: "ros-android"
    }


    /*
     * The android plugin configures a few things:
     *
     *  - local deployment repository : where it dumps the jars and packaged artifacts)
     *  - local maven repositories    : where it finds your locally installed/built artifacts)
     *  - external maven repositories : where it goes looking if it can't find dependencies locally
     *  - android build tools version : which version we use across the board
     *
     * To modify, or add repos to the default external maven repositories list, pull request against this code:
     *
     *   https://github.com/rosjava/rosjava_bootstrap/blob/indigo/gradle_plugins/src/main/groovy/org/ros/gradle_plugins/RosPlugin.groovy#L31
     *
     * To modify the build tools version, pull request against this code:
     *
     *   https://github.com/rosjava/rosjava_bootstrap/blob/indigo/gradle_plugins/src/main/groovy/org/ros/gradle_plugins/RosAndroid.groovy#L14
     */
    afterEvaluate { project ->
        if (!isJava) {
            android {
                compileSdkVersion 28

                defaultConfig {
                    versionName version
                    versionCode versionNum
                    minSdkVersion 16
                    targetSdkVersion 28
                }

                sourceSets {
                    main {
                        manifest.srcFile "AndroidManifest.xml"
                        res.srcDirs "res"
                        assets.srcDirs "assets"
                        java.srcDirs "src"
                        jniLibs.srcDirs "libs"
                    }
                }

                buildTypes {
                    def appStringName = name.replace("android_tutorial_","").replace("_"," ").replace("cv bridge","").replace("CompressedImage", "IITD UVD Robot").replace("javacv","")
                    def fullAppName = appStringName.replace("cv_bridge", "").replace("CompressedImage", "IITD UVD Robot").replace("javacv","")
                    all {
                        resValue "string", "app_string_name", appStringName
                    }
                    debug{
                        //noinspection GroovyAssignabilityCheck
                        resValue "string", "full_app_name", fullAppName + " dv" + version
                    }
                    release {
                        //noinspection GroovyAssignabilityCheck
                        resValue "string", "full_app_name", fullAppName.replace("android_tutorial_","").replace("_"," ").replace("cv bridge","").replace("CompressedImage", "IITD UVD Robot").replace("javacv","") + " v" + version
                    }
                }
            }
        }
    }
}